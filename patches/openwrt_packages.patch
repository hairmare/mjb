diff --git a/Xorg/lib/tslib/Makefile b/Xorg/lib/tslib/Makefile
index 6923182..b78de78 100644
--- a/Xorg/lib/tslib/Makefile
+++ b/Xorg/lib/tslib/Makefile
@@ -8,12 +8,12 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=tslib
-PKG_VERSION:=1.0
-PKG_RELEASE:=1
+PKG_VERSION:=1.0.84
+PKG_RELEASE:=0
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
 PKG_SOURCE_URL:=http://download.berlios.de/tslib/
-PKG_MD5SUM:=92b2eb55b1e4ef7e2c0347069389390e
+PKG_MD5SUM:=40e63adc983a05c9e922c4e21e5ecaae
 
 PKG_INSTALL:=1
 PKG_FIXUP:=libtool
diff --git a/Xorg/lib/tslib/patches/dirty_egalax_hack.patch b/Xorg/lib/tslib/patches/dirty_egalax_hack.patch
new file mode 100644
index 0000000..8daa23f
--- /dev/null
+++ b/Xorg/lib/tslib/patches/dirty_egalax_hack.patch
@@ -0,0 +1,47 @@
+diff -Naur tslib-1.0.84/plugins/input-raw.c tslib/plugins/input-raw.c
+--- tslib-1.0.84/plugins/input-raw.c	2010-05-03 19:10:55.000000000 +0200
++++ tslib/plugins/input-raw.c	2010-05-03 23:08:51.000000000 +0200
+@@ -92,9 +92,9 @@
+ 	}
+ 
+ 	if ((ioctl(ts->fd, EVIOCGBIT(EV_ABS, sizeof(absbit)), absbit)) < 0 ||
+-		!(absbit[BIT_WORD(ABS_X)] & BIT_MASK(ABS_X)) ||
+-		!(absbit[BIT_WORD(ABS_Y)] & BIT_MASK(ABS_Y))) {
+-		fprintf(stderr, "tslib: Selected device is not a touchscreen (must support ABS_X and ABS_Y events)\n");
++		!(absbit[BIT_WORD(ABS_Z)] & BIT_MASK(ABS_Z)) ||
++		!(absbit[BIT_WORD(ABS_RX)] & BIT_MASK(ABS_RX))) {
++		fprintf(stderr, "tslib: Selected device is not a touchscreen (must support ABS_Z and ABS_RX events)\n");
+ 		return -1;
+ 	}
+ 
+@@ -179,10 +179,10 @@
+ 				break;
+ 			case EV_ABS:
+ 				switch (ev.code) {
+-				case ABS_X:
++				case ABS_Z:
+ 					i->current_x = ev.value;
+ 					break;
+-				case ABS_Y:
++				case ABS_RX:
+ 					i->current_y = ev.value;
+ 					break;
+ 				case ABS_PRESSURE:
+@@ -218,7 +218,7 @@
+ 
+ 			if (ev.type == EV_ABS) {
+ 				switch (ev.code) {
+-				case ABS_X:
++				case ABS_Z:
+ 					if (ev.value != 0) {
+ 						samp->x = i->current_x = ev.value;
+ 						samp->y = i->current_y;
+@@ -228,7 +228,7 @@
+ 						continue;
+ 					}
+ 					break;
+-				case ABS_Y:
++				case ABS_RX:
+ 					if (ev.value != 0) {
+ 						samp->x = i->current_x;
+ 						samp->y = i->current_y = ev.value;
diff --git a/Xorg/lib/tslib/patches/event1.patch b/Xorg/lib/tslib/patches/event1.patch
deleted file mode 100644
index 88cc3f3..0000000
--- a/Xorg/lib/tslib/patches/event1.patch
+++ /dev/null
@@ -1,80 +0,0 @@
-
-#
-# Patch managed by http://www.holgerschurig.de/patcher.html
-#
-
---- tslib/tests/ts_calibrate.c~event1
-+++ tslib/tests/ts_calibrate.c
-@@ -179,11 +179,7 @@
- 	if( (tsdevice = getenv("TSLIB_TSDEVICE")) != NULL ) {
- 		ts = ts_open(tsdevice,0);
- 	} else {
--#ifdef USE_INPUT_API
--		ts = ts_open("/dev/input/event0", 0);
--#else
--		ts = ts_open("/dev/touchscreen/ucb1x00", 0);
--#endif /* USE_INPUT_API */
-+		ts = ts_open("/dev/input/event1", 0);
- 	}
- 
- 	if (!ts) {
---- tslib/tests/ts_print.c~event1
-+++ tslib/tests/ts_print.c
-@@ -28,11 +28,7 @@
-         if( (tsdevice = getenv("TSLIB_TSDEVICE")) != NULL ) {
-                 ts = ts_open(tsdevice,0);
-         } else {
--#ifdef USE_INPUT_API
--                ts = ts_open("/dev/input/event0", 0);
--#else
--                ts = ts_open("/dev/touchscreen/ucb1x00", 0);
--#endif /* USE_INPUT_API */
-+                ts = ts_open("/dev/input/event1", 0);
-         }
- 
- 	if (!ts) {
---- tslib/tests/ts_test.c~event1
-+++ tslib/tests/ts_test.c
-@@ -120,11 +120,7 @@
- 	signal(SIGTERM, sig);
- 
- 	if ((tsdevice = getenv("TSLIB_TSDEVICE")) == NULL) {
--#ifdef USE_INPUT_API
--		tsdevice = strdup ("/dev/input/event0");
--#else
--		tsdevice = strdup ("/dev/touchscreen/ucb1x00");
--#endif /* USE_INPUT_API */
-+		tsdevice = strdup ("/dev/input/event1");
-         }
- 
- 	ts = ts_open (tsdevice, 0);
---- tslib/tests/ts_print_raw.c~event1
-+++ tslib/tests/ts_print_raw.c
-@@ -28,11 +28,7 @@
-         if( (tsdevice = getenv("TSLIB_TSDEVICE")) != NULL ) {
-                 ts = ts_open(tsdevice,0);
-         } else {
--#ifdef USE_INPUT_API
--                ts = ts_open("/dev/input/event0", 0);
--#else
--                ts = ts_open("/dev/touchscreen/ucb1x00", 0);
--#endif /* USE_INPUT_API */
-+                ts = ts_open("/dev/input/event1", 0);
-         }
- 
- 	if (!ts) {
---- tslib/tests/ts_harvest.c~event1
-+++ tslib/tests/ts_harvest.c
-@@ -75,11 +75,7 @@
- 	signal(SIGTERM, sig);
- 
- 	if ((tsdevice = getenv("TSLIB_TSDEVICE")) == NULL) {
--#ifdef USE_INPUT_API
--		tsdevice = strdup ("/dev/input/event0");
--#else
--		tsdevice = strdup ("/dev/touchscreen/ucb1x00");
--#endif /* USE_INPUT_API */
-+		tsdevice = strdup ("/dev/input/event1");
-         }
- 
- 	ts = ts_open (tsdevice, 0);
diff --git a/Xorg/lib/tslib/patches/fix_version.patch b/Xorg/lib/tslib/patches/fix_version.patch
deleted file mode 100644
index d6a0ebd..0000000
--- a/Xorg/lib/tslib/patches/fix_version.patch
+++ /dev/null
@@ -1,32 +0,0 @@
----
- configure.ac |   10 +++++-----
- 1 file changed, 5 insertions(+), 5 deletions(-)
-
-Index: tslib-1.0/configure.ac
-===================================================================
---- tslib-1.0.orig/configure.ac	2006-08-24 22:02:55.000000000 +0100
-+++ tslib-1.0/configure.ac	2007-07-09 21:04:38.000000000 +0100
-@@ -2,7 +2,7 @@
- # Process this file with autoconf to produce a configure script.
- 
- AC_PREREQ(2.57)
--AC_INIT(tslib, 0.0.2, kergoth@handhelds.org)
-+AC_INIT(tslib, 1.0.0, kergoth@handhelds.org)
- # AC_CONFIG_AUX_DIR(config)
- AM_INIT_AUTOMAKE(dist-bzip2)
- AC_CONFIG_SRCDIR([src/ts_close.c])
-@@ -193,10 +193,10 @@ TS_CONF='${sysconfdir}/ts.conf'
- AC_SUBST(TS_CONF)
- 
- # Library versioning
--LT_RELEASE=0.0
--LT_CURRENT=1
--LT_REVISION=1
--LT_AGE=1
-+LT_RELEASE=1.0
-+LT_CURRENT=0
-+LT_REVISION=0
-+LT_AGE=0
- AC_SUBST(LT_RELEASE)
- AC_SUBST(LT_CURRENT)
- AC_SUBST(LT_REVISION)
diff --git a/Xorg/lib/tslib/patches/tslib-input_raw-grab_events.patch b/Xorg/lib/tslib/patches/tslib-input_raw-grab_events.patch
deleted file mode 100644
index 4bd0a05..0000000
--- a/Xorg/lib/tslib/patches/tslib-input_raw-grab_events.patch
+++ /dev/null
@@ -1,120 +0,0 @@
-This patch adds support for "EVIOCGRAB" on the input device, which
-tells the kernel _not_ to deliver events of the touchscreen to
-/dev/input/mice.  
-
-This is probably what most people want, since unprocessed raw touchscreen
-events should not be converted to emulated PS/2 mouse movements.
-
-Signed-off-by: Harald Welte <laforge@openmoko.org>
-
-Index: a/plugins/input-raw.c
-===================================================================
---- a/plugins/input-raw.c	(revision 49)
-+++ b/plugins/input-raw.c	(working copy)
-@@ -18,6 +18,7 @@
- 
- #include <errno.h>
- #include <stdio.h>
-+#include <limits.h>
- 
- #include <stdlib.h>
- #ifdef HAVE_UNISTD_H
-@@ -33,6 +34,9 @@
- 
- #include "tslib-private.h"
- 
-+#define GRAB_EVENTS_WANTED	1
-+#define GRAB_EVENTS_ACTIVE	2
-+
- struct tslib_input {
- 	struct tslib_module_info module;
- 
-@@ -42,6 +46,7 @@
- 
- 	int	sane_fd;
- 	int	using_syn;
-+	int	grab_events;
- };
- 
- static int check_fd(struct tslib_input *i)
-@@ -64,6 +69,14 @@
- 
- 	if (bit & (1 << EV_SYN))
- 		i->using_syn = 1;
-+	
-+	if (i->grab_events == GRAB_EVENTS_WANTED) {
-+		if (ioctl(ts->fd, EVIOCGRAB, (void *)1)) {
-+			fprintf(stderr, "Unable to grab selected input device\n");
-+			return -1;
-+		}
-+		i->grab_events = GRAB_EVENTS_ACTIVE;
-+	}
- 
- 	return 0;
- }
-@@ -222,6 +235,15 @@
- 
- static int ts_input_fini(struct tslib_module_info *inf)
- {
-+	struct tslib_input *i = (struct tslib_input *)inf;
-+	struct tsdev *ts = inf->dev;
-+
-+	if (i->grab_events == GRAB_EVENTS_ACTIVE) {
-+		if (ioctl(ts->fd, EVIOCGRAB, (void *)0)) {
-+			fprintf(stderr, "Unable to un-grab selected input device\n");
-+		}
-+	}
-+
- 	free(inf);
- 	return 0;
- }
-@@ -231,6 +253,36 @@
- 	.fini	= ts_input_fini,
- };
- 
-+static int parse_raw_grab(struct tslib_module_info *inf, char *str, void *data)
-+{
-+	struct tslib_input *i = (struct tslib_input *)inf;
-+	unsigned long v;
-+	int err = errno;
-+
-+	v = strtoul(str, NULL, 0);
-+
-+	if (v == ULONG_MAX && errno == ERANGE)
-+		return -1;
-+	
-+	errno = err;
-+	switch ((int)data) {
-+	case 1:
-+		if (v)
-+			i->grab_events = GRAB_EVENTS_WANTED;
-+		break;
-+	default:
-+		return -1;
-+	}
-+	return 0;
-+}
-+
-+static const struct tslib_vars raw_vars[] =
-+{
-+	{ "grab_events", (void *)1, parse_raw_grab },
-+};
-+
-+#define NR_VARS (sizeof(raw_vars) / sizeof(raw_vars[0]))
-+
- TSAPI struct tslib_module_info *mod_init(struct tsdev *dev, const char *params)
- {
- 	struct tslib_input *i;
-@@ -245,5 +297,12 @@
- 	i->current_p = 0;
- 	i->sane_fd = 0;
- 	i->using_syn = 0;
-+	i->grab_events = 0;
-+
-+	if (tslib_parse_vars(&i->module, raw_vars, NR_VARS, params)) {
-+		free(i);
-+		return NULL;
-+	}
-+
- 	return &(i->module);
- }
diff --git a/lang/twisted/Makefile b/lang/twisted/Makefile
index f0b7557..3b661b1 100644
--- a/lang/twisted/Makefile
+++ b/lang/twisted/Makefile
@@ -226,9 +226,9 @@ define Build/Compile
 	)
 	$(SED) 's,#!$(PYTHON),#!/usr/bin/python,' $(PKG_INSTALL_DIR)/usr/bin/*
 
-	$(CP) -a \
-		$(PKG_INSTALL_DIR)$(PYTHON_PKG_DIR)/zope.interface-*.egg/zope \
-		$(PKG_INSTALL_DIR)$(PYTHON_PKG_DIR)/
+	#$(CP) -a \
+	#	$(PKG_INSTALL_DIR)$(PYTHON_PKG_DIR)/zope.interface-*.egg/zope \
+	#	$(PKG_INSTALL_DIR)$(PYTHON_PKG_DIR)/
 endef
 
 $(eval $(call PyPackage,twisted))
diff --git a/sound/mpd/Makefile b/sound/mpd/Makefile
index 3727c3a..8abd31e 100644
--- a/sound/mpd/Makefile
+++ b/sound/mpd/Makefile
@@ -98,7 +98,7 @@ TARGET_CXX:=$(TARGET_CC)
 
 define Package/mpd/install
 	$(INSTALL_DIR) $(1)/etc
-	$(CP) $(PKG_BUILD_DIR)/doc/mpdconf.example $(1)/etc/mpd.conf
+	$(CP) ./files/mpd.conf $(1)/etc/mpd.conf
 	$(INSTALL_DIR) $(1)/usr/bin
 	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/mpd $(1)/usr/bin/
 	$(INSTALL_DIR) $(1)/etc/init.d
diff --git a/sound/mpd/files/mpd.conf b/sound/mpd/files/mpd.conf
new file mode 100644
index 0000000..54efe82
--- /dev/null
+++ b/sound/mpd/files/mpd.conf
@@ -0,0 +1,237 @@
+music_directory			"/mnt"
+playlist_directory		"/playlists"
+db_file				"/tmp/mpd.database"
+#log_file			"/var/log/mpd.log"
+#log_level			"default"
+pid_file			"/tmp/mpd.pid"
+state_file			"/tmp/mpd.state"
+
+#user				"nobody"
+#bind_to_address		"any"
+#port				"6600"
+#gapless_mp3_playback			"yes"
+#save_absolute_paths_in_playlists	"no"
+#metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc,comment"
+follow_outside_symlinks	"yes"
+follow_inside_symlinks		"yes"
+zeroconf_enabled		"yes"
+zeroconf_name			"Music Player"
+
+# admin pwd
+password                        "admin@read,add,control,admin"
+# user pwd
+password			"user@read,add,control"
+default_permissions		"read,add"
+
+input {
+        plugin "curl"
+}
+
+#
+###############################################################################
+
+# Audio Output ################################################################
+#
+# MPD supports various audio output types, as well as playing through multiple 
+# audio outputs at the same time, through multiple audio_output settings 
+# blocks. Setting this block is optional, though the server will only attempt
+# autodetection for one sound card.
+#
+# See <http://mpd.wikia.com/wiki/Configuration#Audio_Outputs> for examples of 
+# other audio outputs.
+#
+# An example of an ALSA output:
+#
+#audio_output {
+#	type		"alsa"
+#	name		"My ALSA Device"
+##	device		"hw:0,0"	# optional
+##	format		"44100:16:2"	# optional
+##	mixer_device	"default"	# optional
+##	mixer_control	"PCM"		# optional
+##	mixer_index	"0"		# optional
+#}
+#
+# An example of an OSS output:
+#
+#audio_output {
+#	type		"oss"
+#	name		"My OSS Device"
+##	device		"/dev/dsp"	# optional
+##	format		"44100:16:2"	# optional
+##	mixer_device	"/dev/mixer"	# optional
+##	mixer_control	"PCM"		# optional
+#}
+#
+# An example of a shout output (for streaming to Icecast):
+#
+#audio_output {
+#	type		"shout"
+#	encoding	"ogg"			# optional
+#	name		"My Shout Stream"
+#	host		"localhost"
+#	port		"8000"
+#	mount		"/mpd.ogg"
+#	password	"hackme"
+#	quality		"5.0"
+#	bitrate		"128"
+#	format		"44100:16:1"
+##	protocol	"icecast2"		# optional
+##	user		"source"		# optional
+##	description	"My Stream Description"	# optional
+##	genre		"jazz"			# optional
+##	public		"no"			# optional
+##	timeout		"2"			# optional
+#}
+#
+# An example of a httpd output (built-in HTTP streaming server):
+#
+#audio_output {
+#	type		"httpd"
+#	name		"My HTTP Stream"
+#	encoder		"vorbis"		# optional, vorbis or lame
+#	port		"8000"
+##	quality		"5.0"			# do not define if bitrate is defined
+#	bitrate		"128"			# do not define if quality is defined
+#	format		"44100:16:1"
+#}
+#
+# An example of a pulseaudio output (streaming to a remote pulseaudio server)
+#
+#audio_output {
+#	type		"pulse"
+#	name		"My Pulse Output"
+##	server		"remote_server"		# optional
+##	sink		"remote_server_sink"	# optional
+#}
+#
+## Example "pipe" output:
+#
+#audio_output {
+#	type		"pipe"
+#	name		"my pipe"
+#	command		"aplay -f cd 2>/dev/null"
+## Or if you're want to use AudioCompress
+#	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
+## Or to send raw PCM stream through PCM:
+#	command		"nc example.org 8765"
+#	format		"44100:16:2"
+#}
+#
+## An example of a null output (for no audio output):
+#
+#audio_output {
+#	type		"null"
+#	name		"My Null Output"
+#}
+#
+# This setting will change all decoded audio to be converted to the specified
+# format before being passed to the audio outputs. By default, this setting is
+# disabled.
+#
+#audio_output_format		"44100:16:2"
+#
+# If MPD has been compiled with libsamplerate support, this setting specifies 
+# the sample rate converter to use.  Possible values can be found in the 
+# mpd.conf man page or the libsamplerate documentation. By default, this is
+# setting is disabled.
+#
+#samplerate_converter		"Fastest Sinc Interpolator"
+#
+###############################################################################
+
+
+# Volume control mixer ########################################################
+#
+# These are the global volume control settings. By default, this setting will
+# be detected to the available audio output device, with preference going to 
+# hardware mixing. Hardware and software mixers for individual audio_output
+# sections cannot yet be mixed.
+#
+# An example for controlling an ALSA, OSS or Pulseaudio mixer; If this
+# setting is used other sound applications will be affected by the volume
+# being controlled by MPD.
+#
+#mixer_type			"hardware"
+#
+# An example for controlling all mixers through software. This will control
+# all controls, even if the mixer is not supported by the device and will not
+# affect any other sound producing applications.
+#
+#mixer_type			"software"
+#
+# This example will not allow MPD to touch the mixer at all and will disable
+# all volume controls.
+#
+#mixer_type			"disabled"
+#
+###############################################################################
+
+
+# Normalization automatic volume adjustments ##################################
+#
+# This setting specifies the type of ReplayGain to use. This setting can have
+# the argument "album" or "track". See <http://www.replaygain.org> for more
+# details. This setting is disabled by default.
+#
+#replaygain			"album"
+#
+# This setting sets the pre-amp used for files that have ReplayGain tags. By
+# default this setting is disabled.
+#
+#replaygain_preamp		"0"
+#
+# This setting enables on-the-fly normalization volume adjustment. This will
+# result in the volume of all playing audio to be adjusted so the output has 
+# equal "loudness". This setting is disabled by default.
+#
+#volume_normalization		"no"
+#
+###############################################################################
+
+
+# MPD Internal Buffering ######################################################
+#
+# This setting adjusts the size of internal decoded audio buffering. Changing
+# this may have undesired effects. Don't change this if you don't know what you
+# are doing.
+#
+#audio_buffer_size		"2048"
+#
+# This setting controls the percentage of the buffer which is filled before 
+# beginning to play. Increasing this reduces the chance of audio file skipping, 
+# at the cost of increased time prior to audio playback.
+#
+#buffer_before_play		"10%"
+#
+###############################################################################
+
+
+# Resource Limitations ########################################################
+#
+# These settings are various limitations to prevent MPD from using too many
+# resources. Generally, these settings should be minimized to prevent security
+# risks, depending on the operating resources.
+#
+#connection_timeout		"60"
+#max_connections		"10"
+#max_playlist_length		"16384"
+#max_command_list_size		"2048"
+#max_output_buffer_size		"8192"
+#
+###############################################################################
+
+
+# Character Encoding ##########################################################
+#
+# If file or directory names do not display correctly for your locale then you 
+# may need to modify this setting. After modification of this setting mpd 
+# --create-db must be run to change the database.
+#
+#filesystem_charset		"UTF-8"
+#
+# This setting controls the encoding that ID3v1 tags should be converted from.
+#
+#id3v1_encoding			"ISO-8859-1"
+#
+###############################################################################
